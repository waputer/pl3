// TODO generic op: prefix
// TODO document
def[export,extern] fp32(fp32 a) m_sqrt_fp32;
def[export] fp32(fp32 a) m:pow2_fp32 = {
	return a * a;
};
def[export] u32(u32 a, u32 b) m:max_u32 = {
	return (a > b) ? a : b;
};
def[export] i32(i32 a, i32 b) m:max_i32 = {
	return (a > b) ? a : b;
};
def[export] u32(u32 a, u32 b) m:min_u32 = {
	return (a < b) ? a : b;
};
def[export] i32(i32 a, i32 b) m:min_i32 = {
	return (a < b) ? a : b;
};

def[export] i64(i64 a, i64 b) m:max_i64 = {
	return (a > b) ? a : b;
};
def[export] i64(i64 a, i64 b) m:min_i64 = {
	return (a < b) ? a : b;
};

def[export] u32(u32 v, u32 a) m:align_u32 = {
	return (v - 1) + (a - (v - 1) % a);
};

def[export] u32(i32 val) m:abs_i32 = {
	return (val < 0) ? -val : val;
};

def[export] u8 m:u8_max = 0xFF;
def[export] u16 m:u16_max = 0xFFFF;
def[export] u32 m:u32_max = 0xFFFFFFFF;
def[export] u64 m:u64_max1 = 0xFFFFFFFF;
def[export] u64 m:u64_max = 0xFFFFFFFFFFFFFFFF;

def[export] i8 m:i8_max = 0x7F;
def[export] i16 m:i16_max = 0x7FFF;
def[export] i32 m:i32_max = 0x7FFFFFFF;
def[export] i64 m:i64_max = 0x7FFFFFFFFFFFFFFF;

def[export] i8 m:i8_min = -0x80;
def[export] i16 m:i16_min = -0x8000;
def[export] i32 m:i32_min = -0x80000000;
def[export] i64 m:i64_min = -0x8000000000000000;
